datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified Boolean   @default(false)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          Role      @default(USER)
  tickets       Ticket[]
  station       Station?  @relation("ManagerStation")
  sessions      Session[]
  accounts      Account[]
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id           String @id @default(cuid())
  accountId    String
  providerId   String
  userId       String
  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String?
  refreshToken String?
  idToken      String?
  accessTokenExpiresAt DateTime?
  refreshTokenExpiresAt DateTime?
  scope        String?
  password     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Station {
  id        String   @id @default(cuid())
  name      String
  code      String   @unique
  mapsCode  String
  address   String?
  status    String   @default("open")
  manager   User?    @relation("ManagerStation", fields: [managerId], references: [id])
  managerId String?  @unique
  tickets   Ticket[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id         String   @id @default(cuid())
  ticketId   String   @unique
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  station    Station  @relation(fields: [stationId], references: [id], onDelete: Cascade)
  stationId  String
  status     String   @default("active")
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  MANAGER
  ADMIN
}
